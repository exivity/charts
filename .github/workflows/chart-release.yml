name: Release Charts

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'charts/**'
      - '.github/workflows/chart-release.yml'

jobs:
  helm-release:
    runs-on: ubuntu-latest
    env:
      GPG_KEY_ID: ${{ secrets.HELM_GPG_KEY_ID }}
      GPG_PASSPHRASE: ${{ secrets.HELM_GPG_PASSPHRASE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Configure GPG
        run: |
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          echo "pinentry-mode loopback" > ~/.gnupg/gpg.conf
          echo "${{ secrets.HELM_GPG_PRIVATE_KEY }}" | base64 -d | gpg --batch --import
          echo "$GPG_PASSPHRASE" | gpg --batch --passphrase-fd 0 --export-secret-keys > ~/.gnupg/secring.gpg

      - name: Package and Sign Charts
        run: |
          for chart_dir in charts/*/; do
            [ -f "$chart_dir/Chart.yaml" ] || continue
            helm package "$chart_dir"
            CHART_FILE=$(ls -t *.tgz | head -n 1)
            echo "$GPG_PASSPHRASE" | gpg --batch --yes --pinentry-mode loopback \
              --passphrase-fd 0 --local-user "$GPG_KEY_ID" \
              --detach-sign --armor --output "${CHART_FILE}.prov" "$CHART_FILE"
          done

      - name: Show packaged chart and .prov file content
        run: |
          for chart_file in *.tgz; do
            prov_file="${chart_file}.prov"
            echo "== 📦 Packaged Chart: $chart_file =="
            tar -tzf "$chart_file"

            echo "== 🔐 Signature File: $prov_file (base64 encoded) =="
            base64 "$prov_file"
            
            echo ""
          done

      - name: Validate Signed Charts (PR only)
        if: github.event_name == 'pull_request'
        run: |
          for chart in *.tgz; do
            echo "🔍 Verifying $chart..."
            helm verify "$chart"
          done
          echo "✅ All charts are properly signed and verified"

      - name: Create Release (Manual trigger only)
        if: github.event_name == 'workflow_dispatch'
        run: |
          CHART_VERSION=$(helm show chart charts/exivity/ | grep '^version:' | awk '{print $2}')
          RELEASE_TAG="exivity-$CHART_VERSION"
          
          gpg --export --armor "$GPG_KEY_ID" > signing-key.asc
          
          gh release create "$RELEASE_TAG" \
            --title "Exivity Helm Chart $CHART_VERSION" \
            --notes "Signed Helm chart release" \
            *.tgz *.prov signing-key.asc
        env:
          GH_TOKEN: ${{ secrets.GH_BOT_TOKEN }}

      - name: Cleanup
        if: always()
        run: |
          gpg --batch --yes --delete-secret-keys "$GPG_KEY_ID" 2>/dev/null || true
          gpg --batch --yes --delete-keys "$GPG_KEY_ID" 2>/dev/null || true