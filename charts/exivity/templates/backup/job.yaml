{{- if .Values.service.backup.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "exivity.fullname" . }}-db-backup
  labels:
    app.kubernetes.io/component: db-backup
    {{- include "exivity.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    helm.sh/hook-weight: "-1" # Run before migration (which has weight "0")
spec:
  completions: 1
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      labels:
        app.kubernetes.io/component: db-backup
        {{- include "exivity.labels" . | nindent 8 }}
    spec:
      securityContext:
        {{- include "exivity.securityContext" (dict "root" . "component" "backup") | nindent 8 }}
      volumes:
        - name: backup-storage
          persistentVolumeClaim:
            claimName: {{ include "exivity.fullname" . }}-backup
        {{- include "exivity.permissionScriptVolume" . | nindent 8 }}
      initContainers:
      {{- include "exivity.initPermissionsContainer" (dict "root" . "component" "backup" "volumes" (list "backup-storage")) | nindent 8 }}
      containers:
        - name: db-backup
          image: {{ include "exivity.image" (set . "name" "backup") }}
          imagePullPolicy: {{ .Values.service.backup.pullPolicy | default .Values.service.pullPolicy | default "IfNotPresent" }}
          command: ["backup"]
          args:
            - "{{ .Values.service.backup.filePrefix }}_$(date +%Y%m%d_%H%M%S).sql.gz"
          env:
            - name: BACKUP_DIR_PATH
              value: "/backups"
            - name: BACKUP_FILE_PREFIX
              value: "{{ .Values.service.backup.filePrefix }}"
            - name: BACKUP_RETENTION_DAYS
              value: "{{ .Values.service.backup.retentionDays }}"
            - name: DB_HOST
              value: {{ .Values.postgresql.host | default (printf "%s-postgresql" (include "exivity.fullname" . )) | quote }}
            - name: DB_PORT
              value: {{ .Values.postgresql.port | default 5432 | quote }}
            - name: DB_USER
              value: {{ .Values.postgresql.global.postgresql.auth.username | quote }}
            - name: DB_PASSWORD
              {{- if empty .Values.postgresql.host }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "exivity.fullname" . }}-postgresql
                  key: password
              {{- else }}
              value: {{ .Values.postgresql.global.postgresql.auth.password | quote }}
              {{- end }}
            - name: DB_NAME
              value: {{ .Values.postgresql.global.postgresql.auth.database | quote }}
            - name: PG_SSLMODE
              value: {{ .Values.postgresql.sslmode | default "disable" | quote }}
          resources:
            {{- toYaml .Values.service.backup.resources | nindent 12 }}
          volumeMounts:
            - name: backup-storage
              mountPath: /backups
      restartPolicy: Never
      {{- with .Values.service.pullSecrets }}
      imagePullSecrets:
        {{- range $name := .}}
        - name: {{ $name }}
        {{- end }}
      {{- end }}
      {{- if .Values.service.backup.nodeName }}
      nodeName: {{ .Values.service.backup.nodeName }}
      {{- end }}
      {{- include "exivity.tolerations" (dict "Values" .Values "component" .Values.service.backup) | nindent 6 }}
      {{- include "exivity.nodeSelector" (dict "Values" .Values "component" .Values.service.backup) | nindent 6 }}
      affinity:
        {{- include "exivity.nodeAffinity" (dict "Values" .Values "component" .Values.service.backup) | nindent 8 }}
{{- end }}
