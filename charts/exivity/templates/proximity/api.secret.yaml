apiVersion: v1
kind:       Secret
metadata:
  name: {{ include "exivity.fullname" $ -}}-licence-key
  labels:
    app.kubernetes.io/component: proximity-api
    {{- include "exivity.labels" $ | indent 4 }}
data:
  {{- if (and .Release.IsUpgrade (not .Values.licence)) }}
  license.key: {{ index (lookup "v1" "Secret" .Release.Namespace (printf "%s-licence-key" (include "exivity.fullname" $))).data "license.key" }}
  {{- else }}
  license.key: {{ .Values.licence | required "A licence is required to be set on initial install" | b64enc }}
  {{- end }}

---

{{- if .Values.ldap.tlsCacert }}
apiVersion: v1
kind:       Secret
metadata:
  name: {{ include "exivity.fullname" $ -}}-ldap-tls-cert
  labels:
    app.kubernetes.io/component: proximity-api
    {{- include "exivity.labels" $ | indent 4 }}
  annotations:
  {{- if .Values.storage.helmResourcePolicyKeep }}
    "helm.sh/resource-policy": keep
  {{- end }}
data:
  ldap.pem: {{ .Values.ldap.tlsCacert | required "ldap.tlsCacert cannot be empty when ldap TLS is enabled" | b64enc }}
{{- end }}
