apiVersion: apps/v1
kind: Deployment
metadata:
  name: pigeon
  labels:
    exivity.k8s/component: pigeon
spec:
  selector:
    matchLabels:
      exivity.k8s/component: pigeon
  replicas: 1
  template:
    metadata:
      labels:
        exivity.k8s/component: pigeon
        {{- include "exivity.default_labels" . | indent 8 }}
    spec:
      volumes:
      - name: config
        configMap:
          name: app-config-pigeon
      - name: log
        persistentVolumeClaim:
          claimName: exivity-pigeon-log
      containers:
      - name: pigeon
        image: {{ .Values.service.pigeon.image }}:{{ .Values.service.pigeon.tag }}
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "25m"
            memory: "50Mi"
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        volumeMounts:
        - name: config
          mountPath: /exivity/home/system
        - name: log
          mountPath: /exivity/home/log/merlin
        - name: log
          mountPath: /exivity/home/log/pigeon
        env:
        - name: EXIVITY_APP_KEY
          valueFrom:
            secretKeyRef:
              name: exivity-app-key
              key: app_key
        - name: REDIS_HOST
          value: exivity-redis-master
        - name: REDIS_PORT
          value: '6379'
        - name: CACHE_DRIVER
          value: redis
        - name: QUEUE_DRIVER
          value: redis
      imagePullSecrets:
      - name: ghcr
---
# pigeon listens to multiple MQ topics, so it gets its own config definition for now
# TODO: get some PHP guru to fix it so we don't need merlin here.
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config-pigeon
  labels:
    exivity.k8s/component: pigeon
    {{- include "exivity.default_labels" . | indent 4 }}
data:
  config.json: |-
    {
      "db": {
        "driver": "postgres",
        "parameters": {
          "host": "{{ .Values.postgresql.fullnameOverride }}",
          "port": 5432,
          "dbname": "{{ .Values.postgresql.auth.dbname }}",
          "user": "{{ .Values.postgresql.auth.username }}",
          "password": "{{ .Values.postgresql.auth.password }}",
          "connect_timeout": 10,
          "sslmode": "disable"
        }
      },
      "merlin": {
        "reservedCPU": 1,
        "heartbeatPeriod": 5,
        "programs": {
          "pigeon": {
            "path": "server/php/php",
            "queue": "PIGEON",
            "CPU": 0,
            "RAM": 0
          },
          "workflow_ended": {
            "component": "pigeon",
            "path": "/usr/bin/php",
            "queue": "WORKFLOW_EVENT",
            "topic": "evt.workflow_status.griffon.#",
            "params": "common/pigeon/pigeon.phar event:post workflow_ended `${payload}`",
            "CPU": 0.25,
            "RAM": 250
          },
          "report_published": {
            "component": "pigeon",
            "path": "/usr/bin/php",
            "queue": "REPORT_PUBLISHED",
            "topic": "evt.report_published.proximity.#",
            "params": "common/pigeon/pigeon.phar event:post report_published `${payload}`",
            "CPU": 0.25,
            "RAM": 250
          }
        }
      },
      "mq": {
        "servers": [
          {
            "host": "{{ .Values.rabbitmq.host }}",
            "port": {{ .Values.rabbitmq.port }},
            "secure": false
          }
        ],
        "user": "{{ .Values.rabbitmq.user }}",
        "password": "{{ .Values.rabbitmq.password }}",
        "vhost": "/",
        "redialPeriod": 5
      }
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: exivity-pigeon-log
  labels:
    exivity.k8s/component: pigeon
    {{- include "exivity.default_labels" . | indent 4 }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
{{- if .Values.storage.storageClass }}
  storageClassName: {{ .Values.storage.storageClass }}
{{ end }}
