apiVersion: batch/v1
kind:       Job
metadata:
  name: {{ include "exivity.fullname" $ -}}-migration
  labels:
    app.kubernetes.io/component: migration
    {{- include "exivity.labels" $ | indent 4 }}
  annotations:
    "helm.sh/hook": post-upgrade,post-install
    "helm.sh/hook-delete-policy": hook-succeeded
    helm.sh/hook-weight: "0"
spec:
  completions:             1
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      labels:
        app.kubernetes.io/component: migration
        {{- include "exivity.labels" $ | indent 8 }}
    spec:
      containers:
        - name: migration
          image: {{ include "exivity.image" (set $ "name" "dbInit") }}
          imagePullPolicy: {{ .Values.service.dbInit.pullPolicy | default .Values.service.pullPolicy | default "IfNotPresent" }}
          envFrom:
            - configMapRef:
                name: {{ include "exivity.fullname" . }}-postgres-config
            - secretRef:
                name: {{ include "exivity.fullname" . }}-postgres-secret
          resources:
            {{- toYaml .Values.service.dbInit.migration.resources | nindent 12 }}
      restartPolicy: Never
      {{- with .Values.service.pullSecrets }}
      imagePullSecrets:
        {{- range $name := .}}
        - name: {{ $name }}
        {{- end }}
      {{- end }}
      {{- if .Values.service.dbInit.nodeName }}
      nodeName: {{ .Values.service.dbInit.nodeName }}
      {{- end }}
      {{- include "exivity.tolerations" (dict "Values" .Values "component" .Values.service.dbInit) | nindent 6 }}
      {{- include "exivity.nodeSelector" (dict "Values" .Values "component" .Values.service.dbInit) | nindent 6 }}
      affinity:
        {{- include "exivity.nodeAffinity" (dict "Values" .Values "component" .Values.service.dbInit) | nindent 8 }}