apiVersion: apps/v1
kind:       Deployment
metadata:
  name: {{ include "exivity.fullname" $ -}}-glass
  labels:
    app.kubernetes.io/component: glass
    {{- include "exivity.labels" $ | indent 4 }}
spec:
  replicas: {{ .Values.service.glass.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: glass
      {{- include "exivity.matchLabels" $ | indent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: glass
        {{- include "exivity.labels" $ | indent 8 }}
    spec:
      volumes:
        - name: log
          persistentVolumeClaim:
            claimName: {{ include "exivity.fullname" $ -}}-glass-log
      containers:
        - name:            glass
          image: {{ include "exivity.image" (set $ "name" "glass") }}
          imagePullPolicy: {{ .Values.service.glass.pullPolicy | default .Values.service.pullPolicy | default "IfNotPresent" }}
          resources:
            requests:
              cpu:    "25m"
              memory: "50Mi"
          securityContext:
            runAsUser:  1000
            runAsGroup: 1000
          ports:
            - name:          http
              protocol:      TCP
              containerPort: 8080
          volumeMounts:
            - name:      log
              mountPath: /exivity/home/log/glass
          {{- include "exivity.nfs-liveness" $ | indent 10}}
      {{- with .Values.service.pullSecrets }}
      imagePullSecrets:
        {{- range $name := .}}
        - name: {{ $name }}
        {{- end }}
      {{- end }}
      {{- if .Values.service.glass.nodeName }}
      nodeName: {{ .Values.service.glass.nodeName }}
      {{- end }}
      {{- with .Values.service.glass.nodeSelector }}
      nodeSelector:
        {{ range $key, $val := . }}
        {{ $key }}: {{ $val }}
        {{- end }}
      {{- end }}
